#!/usr/bin/env node
const fs = require("fs-extra");
const path = require("path");
const config = require("../generator.config");

const argv = require("yargs")
  .usage("Usage: $0 --create=<dir> [options]")
  .option("create", {
    describe: "project directory"
  })
  .option("f", {
    describe: "override directory if exists"
  })
  .demandOption(["create"])
  .example("$0 --create=example_dir")
  .help()
  .argv;

const directory = argv.create;

const outDir = path.resolve(process.cwd(), directory);
const projectDir = path.resolve(__dirname, "../");

const init = (settings) => {
  const defaults = {
    "name": "",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "scripts": {},
    "keywords": [],
    "author": "",
    "license": "MIT",
  };

  const packageJson = JSON.stringify({ ...defaults, ...settings }, null, 2);
  fs.outputFileSync(`${outDir}/package.json`, packageJson);
}

if (!argv.f && fs.existsSync(directory)) {
  console.log("Directory already exists");
  return
};

init({
  name: path.parse(directory).name,
  devDependencies: config.devDependencies || "",
  dependencies: config.dependencies || "",
  scripts: config.scripts,
});

fs.copy(`${projectDir}/gulpfile.js`, `${outDir}/gulpfile.js`);
fs.copy(`${projectDir}/webpack.config.js`, `${outDir}/webpack.config.js`);
fs.outputFileSync(`${outDir}/babel.config.json`, JSON.stringify({ ...config.babel }, null, 2));
fs.copy(`${projectDir}/src`, `${outDir}/src`);
fs.mkdirs(`${outDir}/sprites/png`);
fs.mkdirs(`${outDir}/sprites/svg`);
fs.mkdirs(`${outDir}/images`);